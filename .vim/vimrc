" be iMproved
set nocompatible

" ---------- Vundle handles plugins ---------- "
filetype off
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'scrooloose/nerdtree'
let NERDTreeIgnore = ['\.pyc$']
let NERDTreeQuitOnOpen = 1
Bundle 'scrooloose/syntastic'
Bundle 'Lokaltog/vim-easymotion'
let g:EasyMotion_leader_key = '<Leader>'
Bundle 'tpope/vim-surround'
Bundle 'tikhomirov/vim-glsl'
Bundle 'flazz/vim-colorschemes'
Bundle 'vim-scripts/ScrollColors'
Bundle 'chip2n/chiptheme'
Bundle 'klen/python-mode'
Bundle 'xolox/vim-misc'
Bundle 'xolox/vim-easytags'
let g:easytags_async=1
let g:easytags_syntax_keyword='always'
let g:easytags_on_cursorhold=0
Bundle 'majutsushi/tagbar'

autocmd Filetype java setlocal omnifunc=javacomplete#Complete
autocmd Filetype java map <leader> b :call javacomplete#GoToDefinition()<CR>

:filetype plugin indent on
" -------------------------------------------- "

" Disable arrow keys - thou shalt not use them
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>
inoremap <up> <nop>
inoremap <down> <nop>
inoremap <left> <nop>
inoremap <right> <nop>

" Enables moving between rows of a single line
nnoremap j gj
nnoremap k gk

" Navigate between vim splits
nmap <silent> <c-h> :wincmd h<CR>
nmap <silent> <c-j> :wincmd j<CR>
nmap <silent> <c-k> :wincmd k<CR>
nmap <silent> <c-l> :wincmd l<CR>

" Set split to 80 char width
nmap <silent> <c-p> :vertical resize 83<CR>

" Set backspace to open/focus NERDTree
nnoremap <BS> :NERDTreeToggle <CR>
nnoremap <S-BS> :TagbarToggle <CR>

" Set space to show ctags of selected tags
nnoremap <Space> <C-]>
nnoremap <S-Space> <C-T>

" Easier 'pagedown' and 'pageup' bindings
nnoremap <C-J> <C-D>
nnoremap <C-k> <C-U>

" Enable 256 colors
let &t_Co=256

" Enable syntax highlighting
syntax on
set background=dark
" colorscheme fu
colorscheme chiptheme

" Set font for GVim
set guifont=Terminus\ 8

" Set lazy redraw for faster scrolling
set lazyredraw

" Marks too long lines
hi OverLength ctermbg=2 ctermfg=15
match OverLength /\%81v.\+/

" Remove annoying interface stuffz
" Menu bar
set guioptions-=m
" Tool bar
set guioptions-=T
" Right scrollbar
set guioptions-=r
" Left scrollbar
set guioptions-=L
" Remove tab bar
set guioptions-=e

" Disables modelines, which prevents some security exploits
set modelines=0

" New splits appear below current window
set splitbelow

" Set the default encoding to UTF-8
"set encoding=utf-8

" Set the minimum amount of visible lines above/under
" the cursor to 3 (default is 0)
set scrolloff=3

" Set automatic indentation
set autoindent

" Show the modes in the status bar
set showmode

" Show the current command in the status bar
set showcmd

" Enable the wildmenu (shows the tab completion options)
set wildmenu
set wildmode=list:longest

" Highlight the current cursor line
set cursorline

" Set fast terminal connection
set ttyfast

" Show line and character number
set ruler

" Set relativenumber when not in insert mode - numbers otherwise
"set relativenumber
autocmd InsertEnter * :set number
autocmd InsertLeave * :set relativenumber

" Create an undo file to store the undo history
set undofile

" Set tab options
set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2

" Set split bar characters
set fillchars+=vert:\

" Allow backspaces to delete text further than insert point
set backspace=indent,eol,start

" Hide status line
set laststatus=0

" Fold according to syntax - no nesting
set foldmethod=syntax
set foldnestmax=1

" Ignore tab-completion for certain files
set wildignore=*.hi,*.o,*.a,*.so,*.swp,*.swo,*.jpg,*.png

" Per project .vimrc
:set exrc
:set secure

" ----------------------------------------------------------------------
" Save your backups to a less annoying place than the current directory.
" If you have .vim-backup in the current directory, it'll use that.
" Otherwise it saves it to ~/.vim/backup or . if all else fails.
if isdirectory($HOME . '/.vim/backup') == 0
  :silent !mkdir -p ~/.vim/backup >/dev/null 2>&1
endif
set backupdir-=.
set backupdir+=.
set backupdir-=~/
set backupdir^=~/.vim/backup/
set backupdir^=./.vim-backup/
set backup

" Save your swp files to a less annoying place than the current directory.
" If you have .vim-swap in the current directory, it'll use that.
" Otherwise it saves it to ~/.vim/swap, ~/tmp or .
if isdirectory($HOME . '/.vim/swap') == 0
  :silent !mkdir -p ~/.vim/swap >/dev/null 2>&1
endif
set directory=./.vim-swap//
set directory+=~/.vim/swap//
set directory+=~/tmp//
set directory+=.

" viminfo stores the the state of your previous editing session
set viminfo+=n~/.vim/viminfo

if exists("+undofile")
  " undofile - This allows you to use undos after exiting and restarting
  " This, like swap and backups, uses .vim-undo first, then ~/.vim/undo
  " :help undo-persistence
  " This is only present in 7.3+
  if isdirectory($HOME . '/.vim/undo') == 0
    :silent !mkdir -p ~/.vim/undo > /dev/null 2>&1
  endif
  set undodir=./.vim-undo//
  set undodir+=~/.vim/undo//
  set undofile
endif
" ----------------------------------------------------------------------
